# Sexy Solarized Bash Prompt, inspired by "Extravagant Zsh Prompt"
# Screenshot: http://img.gf3.ca/d54942f474256ec26a49893681c49b5a.png

case $TERM in
    xterm* | screen)
        CORNER_TOP="\[\033(0l\033(B\]"
        CORNER_LTOP="\[\033(0m\033(B\]"
        CORNER_BOTTOM="\[\033(0k\033(B\]"
        LINE_TWO="\[\033(0qq\033(B\]"
        LINE_PLUS="\[\033(0n\033(B\]"
        LINE_RIGHT="\[\033(0t\033(B\]"
        LINE_LEFT="\[\033(0u\033(B\]"
        ;;
    *)
        LINE_TWO="--"
        ;;
esac

#if [[ $COLORTERM = gnome-* && $TERM = xterm ]]  && infocmp
#gnome-256color >/dev/null 2>&1; then TERM=gnome-256color; fi
if tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
      BASE03=$(tput setaf 234)
      BASE02=$(tput setaf 235)
      BASE01=$(tput setaf 240)
      BASE00=$(tput setaf 241)
      BASE0=$(tput setaf 244)
      BASE1=$(tput setaf 245)
      BASE2=$(tput setaf 254)
      BASE3=$(tput setaf 230)
      YELLOW=$(tput setaf 136)
      ORANGE=$(tput setaf 166)
      RED=$(tput setaf 160)
      MAGENTA=$(tput setaf 125)
      VIOLET=$(tput setaf 61)
      BLUE=$(tput setaf 33)
      CYAN=$(tput setaf 37)
      GREEN=$(tput setaf 64)
    else
      BASE03=$(tput setaf 8)
      BASE02=$(tput setaf 0)
      BASE01=$(tput setaf 10)
      BASE00=$(tput setaf 11)
      BASE0=$(tput setaf 12)
      BASE1=$(tput setaf 14)
      BASE2=$(tput setaf 7)
      BASE3=$(tput setaf 15)
      YELLOW=$(tput setaf 3)
      ORANGE=$(tput setaf 9)
      RED=$(tput setaf 1)
      MAGENTA=$(tput setaf 5)
      VIOLET=$(tput setaf 13)
      BLUE=$(tput setaf 4)
      CYAN=$(tput setaf 6)
      GREEN=$(tput setaf 2)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
else
    # Linux console colors. I don't have the energy
    # to figure out the Solarized values
    MAGENTA="\033[1;31m"
    ORANGE="\033[1;33m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BOLD=""
    RESET="\033[m"
fi

BACKGROUND="\033[47m"

parse_git_dirty () {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit
(working directory clean)" ]] && echo "*"
}
parse_git_branch () {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

#PS1="\[${BOLD}${CYAN}${BACKGROUND}\]\u \[$BASE0\]at \[$CYAN\]\h \[$BASE0\]in \[$BLUE\]\w\[$BASE0\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \"
#on \")\[$YELLOW\]\$(parse_git_branch)\[$BASE0\]\n\$ \[$RESET\]"
#PS1="\[${BOLD}${CYAN}${BACKGROUND}\]\u \[$BASE0\]at \[$CYAN\]\h \[$BASE0\]in \[$BLUE\]\w\[$BASE0\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$YELLOW\]\$(parse_git_branch)\[$BASE0\]\[$RESET\]\n\[${BOLD}${CYAN}${BACKGROUND}\]\$ \[$RESET\]"
#PS1="${CORNER_TOP}${LINE_TWO}\[${BOLD}${CYAN}${BACKGROUND}\]\u\[$BASE0\]◎ \[$CYAN\]\h\[$BASE0\]◎ \[$BLUE\]\w\[$BASE0\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$YELLOW\]\$(parse_git_branch)\[$BASE0\]\[$RESET\]\n\[${BOLD}${CYAN}${BACKGROUND}\]\$ \[$RESET\]"
PS1=" ${CORNER_TOP}${LINE_TWO}${LINE_RIGHT}\[${BOLD}${CYAN}${BACKGROUND}\]\u\[$BASE0\]${RESET}${LINE_LEFT}${LINE_TWO}${LINE_PLUS}${BOLD}${CYAN}${BACKGROUND}\[$BLUE\]\w${RESET}${LINE_PLUS}\[$BASE0\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \"${LINE_TWO}${LINE_PLUS}\")\[${BACKGROUND}${BOLD}$YELLOW\]\$(parse_git_branch)\[$BASE0\]\[$RESET\]${LINE_LEFT}${LINE_TWO}${CORNER_BOTTOM}\n ${BOLD}${CYAN}${BACKGROUND}\$ \[$RESET\]"
